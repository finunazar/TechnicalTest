{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardComponent = class DashboardComponent {\n  constructor(service) {\n    this.service = service;\n    this.flagSuccess = false;\n    this.flagFailure = false;\n    this.displayFlag = false;\n    this.numberAndRandomOptions = [\"Prime Number\", \"Fibonacci Numbers\", \"Random Characters\"];\n    this.selectedOption = \"Prime Number\";\n    this.result1 = [];\n    this.result2 = [];\n    this.msg = \"\";\n    this.response = \"\";\n  }\n  nextCard() {\n    this.displayFlag = true;\n  }\n  generateList() {\n    console.log(this.x_val);\n    console.log(this.y_val);\n    this.flagFailure = false;\n    this.flagSuccess = false;\n    if (this.selectedOption == \"Prime Number\") {\n      this.service.generatePrimeNumbers(this.x_val, this.y_val).subscribe({\n        next: v => {\n          console.log(v), this.result1 = v, this.convertResult(this.result1);\n        },\n        error: e => {\n          console.log(e), this.flagFailure = true, this.msg = e;\n        },\n        complete: () => {\n          console.info('registration complete');\n        }\n      });\n    } else if (this.selectedOption == \"Fibonacci Numbers\") {\n      this.service.generateFibonacciNumbers(this.x_val, this.y_val).subscribe({\n        next: v => {\n          console.log(v), this.result1 = v, this.convertResult(this.result1);\n        },\n        error: e => {\n          console.log(e), this.flagFailure = true, this.msg = e;\n        },\n        complete: () => {\n          console.info('registration complete');\n        }\n      });\n    } else if (this.selectedOption == \"Random Characters\") {\n      this.service.getRandomCharacters(this.x_val, this.y_val).subscribe({\n        next: v => {\n          console.log(v), this.result2 = v, this.convertResult(this.result2);\n        },\n        error: e => {\n          console.log(e), this.flagFailure = true, this.msg = e;\n        },\n        complete: () => {\n          console.info('registration complete');\n        }\n      });\n    }\n  }\n  convertResult(data) {\n    this.response = data.join(', ');\n    this.flagSuccess = true;\n    console.log(this.response);\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);","map":{"version":3,"names":["Component","DashboardComponent","constructor","service","flagSuccess","flagFailure","displayFlag","numberAndRandomOptions","selectedOption","result1","result2","msg","response","nextCard","generateList","console","log","x_val","y_val","generatePrimeNumbers","subscribe","next","v","convertResult","error","e","complete","info","generateFibonacciNumbers","getRandomCharacters","data","join","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\finun\\OneDrive\\Desktop\\TechnicalTest\\Angular\\Kingston.TechnicalTest.UI\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MathsandrandomService } from '../mathsandrandom.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n  flagSuccess:boolean=false;\n  flagFailure:boolean=false;\n  displayFlag:boolean=false;\n  numberAndRandomOptions:string[]=[\"Prime Number\", \"Fibonacci Numbers\", \"Random Characters\"]\n  selectedOption:string=\"Prime Number\";\n  x_val?:number;\n  y_val?:number;\n  result1:number[]=[];\n  result2:string[]=[];\n  msg:string=\"\";\n  response:string=\"\"\n  constructor(private service:MathsandrandomService)\n  {\n\n  }\n  nextCard()\n  {\n    this.displayFlag = true;\n  }\n\n  generateList()\n  {\n    console.log(this.x_val);\n    console.log(this.y_val);\n    this.flagFailure = false;\n    this.flagSuccess = false;\n    if(this.selectedOption == \"Prime Number\")\n    {\n      this.service.generatePrimeNumbers(this.x_val, this.y_val)\n      .subscribe({\n        next: (v) => {console.log(v), this.result1 = v as number[], this.convertResult(this.result1)},\n        error: (e) => {console.log(e), this.flagFailure =true, this.msg= e as string},\n        complete: () => {console.info('registration complete')} \n      })\n    }\n    else if (this.selectedOption == \"Fibonacci Numbers\")\n    {\n      this.service.generateFibonacciNumbers(this.x_val, this.y_val)\n      .subscribe({\n        next: (v) => {console.log(v), this.result1 = v as number[], this.convertResult(this.result1)},\n        error: (e) => {console.log(e), this.flagFailure =true, this.msg= e as string},\n        complete: () => {console.info('registration complete')} \n      })\n    }\n    else if (this.selectedOption == \"Random Characters\")\n    {\n      this.service.getRandomCharacters(this.x_val, this.y_val)\n      .subscribe({\n        next: (v) => {console.log(v), this.result2 = v as string[], this.convertResult(this.result2)},\n        error: (e) => {console.log(e), this.flagFailure =true, this.msg= e as string},\n        complete: () => {console.info('registration complete')} \n      })\n    }\n  }\n\n  convertResult(data:any)\n  {\n    this.response = data.join(', ');\n    this.flagSuccess=true\n    console.log(this.response)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}