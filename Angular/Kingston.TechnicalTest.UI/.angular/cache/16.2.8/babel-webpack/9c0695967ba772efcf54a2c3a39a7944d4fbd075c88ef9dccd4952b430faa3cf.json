{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class MathsandrandomService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.rootUrl = 'http://localhost:5265/api/MathAndRandom';\n  }\n  generatePrimeNumbers(x, y) {\n    return this.http.get(this.rootUrl + '/PrimeNumbers?x=' + x + \"&y=\" + y, {\n      headers: this.getHeaders()\n    });\n  }\n  generateFibonacciNumbers(x, y) {\n    return this.http.get(this.rootUrl + '/FibonacciNumbers?x=' + x + \"&y=\" + y, {\n      headers: this.getHeaders()\n    });\n  }\n  getRandomCharacters(x, y) {\n    return this.http.get(this.rootUrl + '/RandomCharacters?x=' + x + \"&y=\" + y, {\n      headers: this.getHeaders()\n    });\n  }\n  getHeaders() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return headers;\n  }\n  static #_ = this.ɵfac = function MathsandrandomService_Factory(t) {\n    return new (t || MathsandrandomService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MathsandrandomService,\n    factory: MathsandrandomService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","MathsandrandomService","constructor","http","router","rootUrl","generatePrimeNumbers","x","y","get","headers","getHeaders","generateFibonacciNumbers","getRandomCharacters","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\finun\\OneDrive\\Desktop\\TechnicalTest\\Angular\\Kingston.TechnicalTest.UI\\src\\app\\mathsandrandom.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MathsandrandomService {\n\n  readonly rootUrl = 'http://localhost:5265/api/MathAndRandom';\n  constructor(private http: HttpClient,private router: Router) { }\n\n  generatePrimeNumbers(x?:number, y?:number)\n  {\n      return this.http.get(this.rootUrl+'/PrimeNumbers?x='+x+\"&y=\"+y ,{ headers: this.getHeaders() })\n  }\n\n  generateFibonacciNumbers(x?:number, y?:number)\n  {\n      return this.http.get(this.rootUrl+'/FibonacciNumbers?x='+x+\"&y=\"+y ,{ headers: this.getHeaders() })\n  }\n\n  getRandomCharacters(x:number, y:number)\n  {\n      return this.http.get(this.rootUrl+'/RandomCharacters?x='+x+\"&y=\"+y ,{ headers: this.getHeaders() })\n  }\n\n  getHeaders():HttpHeaders\n  {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n    return headers;\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAO9D,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,IAAgB,EAASC,MAAc;IAAvC,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,MAAM,GAANA,MAAM;IAD1C,KAAAC,OAAO,GAAG,yCAAyC;EACG;EAE/DC,oBAAoBA,CAACC,CAAS,EAAEC,CAAS;IAErC,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACJ,OAAO,GAAC,kBAAkB,GAACE,CAAC,GAAC,KAAK,GAACC,CAAC,EAAE;MAAEE,OAAO,EAAE,IAAI,CAACC,UAAU;IAAE,CAAE,CAAC;EACnG;EAEAC,wBAAwBA,CAACL,CAAS,EAAEC,CAAS;IAEzC,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACJ,OAAO,GAAC,sBAAsB,GAACE,CAAC,GAAC,KAAK,GAACC,CAAC,EAAE;MAAEE,OAAO,EAAE,IAAI,CAACC,UAAU;IAAE,CAAE,CAAC;EACvG;EAEAE,mBAAmBA,CAACN,CAAQ,EAAEC,CAAQ;IAElC,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACJ,OAAO,GAAC,sBAAsB,GAACE,CAAC,GAAC,KAAK,GAACC,CAAC,EAAE;MAAEE,OAAO,EAAE,IAAI,CAACC,UAAU;IAAE,CAAE,CAAC;EACvG;EAEAA,UAAUA,CAAA;IAER,MAAMD,OAAO,GAAG,IAAIV,WAAW,CAAC;MAC9B,cAAc,EAAE;KACjB,CAAC;IACF,OAAOU,OAAO;EAChB;EAAC,QAAAI,CAAA,G;qBA1BUb,qBAAqB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAArBpB,qBAAqB;IAAAqB,OAAA,EAArBrB,qBAAqB,CAAAsB,IAAA;IAAAC,UAAA,EAFpB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}